"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
Object.defineProperty(exports, "__esModule", { value: true });
const cheerio_1 = __importDefault(require("cheerio"));
const months = ["janvier", "février", "mars", "avril", "mai", "juin",
    "juillet", "août", "septembre", "octobre", "novembre", "décembre"];
exports.DefaultParsers = [
    // Reference
    (rawData, current) => {
        current.reference = cheerio_1.default.load(rawData)('.article-meta .meta-table tr').eq(0).children().last().text();
    },
    // Title
    (rawData, current) => {
        current.title = cheerio_1.default.load(rawData)('.article-meta .meta-table tr').eq(1).children().last().text();
    },
    // System
    (rawData, current) => {
        const title = current.title;
        if (title.startsWith("Multiples vulnérabilités dans le noyau Linux de ")) {
            current.system = title.replace("Multiples vulnérabilités dans le noyau Linux de ", "");
        }
        else if (title.startsWith("Multiples vulnérabilités dans le noyau Linux d’")) {
            current.system = title.replace("Multiples vulnérabilités dans le noyau Linux d’", "");
        }
        else if (title.startsWith("Multiples vulnérabilités dans les produits ")) {
            current.system = title.replace("Multiples vulnérabilités dans les produits ", "");
        }
        else if (title.startsWith("Multiples vulnérabilités dans ")) {
            current.system = title.replace("Multiples vulnérabilités dans ", "");
        }
        else if (title.startsWith("Vulnérabilité dans le noyau Linux d’")) {
            current.system = title.replace("Vulnérabilité dans le noyau Linux d’", "");
        }
        else if (title.startsWith("Vulnérabilité dans le noyau Linux de ")) {
            current.system = title.replace("Vulnérabilité dans le noyau Linux de ", "");
        }
        else if (title.startsWith("Vulnérabilité dans ")) {
            current.system = title.replace("Vulnérabilité dans ", "");
        }
    },
    // Risks
    (rawData, current) => {
        current.risks = [];
        const $ = cheerio_1.default.load(rawData);
        $('.article-content > div > div')
            .children('h2').
            filter((i, elt) => $(elt).text() === 'Risque(s)')
            .next()
            .children('li')
            .each((i, elt) => { current.risks.push($(elt).text()); });
    },
    // Sources
    (rawData, current) => {
        current.sources = cheerio_1.default.load(rawData)('.article-meta .meta-table tr').eq(4).children().last().text().split('\n');
    },
    // Timestamp first version
    (rawData, current) => {
        const d = cheerio_1.default.load(rawData)('.article-meta .meta-table tr').eq(2).children().last().text().split(" ");
        const day = parseInt(d[0]);
        const year = parseInt(d[2]);
        const month = months.indexOf(d[1]);
        current.timestampFirstVersion = (new Date(year, month, day)).getTime();
    },
    // Timestamp last version
    (rawData, current) => {
        const d = cheerio_1.default.load(rawData)('.article-meta .meta-table tr').eq(3).children().last().text().split(" ");
        const day = parseInt(d[0]);
        const year = parseInt(d[2]);
        const month = months.indexOf(d[1]);
        current.timestampLastVersion = (new Date(year, month, day)).getTime();
    },
    // Affected systems
    (rawData, current) => {
        current.affectedSys = [];
        const $ = cheerio_1.default.load(rawData);
        $('.article-content > div > div')
            .children('h2')
            .filter((i, elt) => $(elt).text() === 'Systèmes affectés')
            .next()
            .children('li')
            .each((i, elt) => { current.affectedSys.push($(elt).text()); });
    },
    // Documentation
    (rawData, current) => {
        current.documentation = [];
        const $ = cheerio_1.default.load(rawData);
        $('.article-content > div > div')
            .children('h2').
            filter((i, elt) => $(elt).text() === 'Documentation')
            .next()
            .children('li')
            .filter((i, el) => !$(el).text().startsWith('Référence CVE CVE-'))
            .each((i, el) => {
            const splittedDoc = $(el).text().split('http');
            current.documentation.push({
                id: splittedDoc[0].trim(),
                href: `http${splittedDoc[1].trim()}`
            });
        });
    },
    // CVEs
    (rawData, current) => {
        current.cve = [];
        const $ = cheerio_1.default.load(rawData);
        $('.article-content > div > div')
            .children('h2').
            filter((i, elt) => $(elt).text() === 'Documentation')
            .next()
            .children('li')
            .filter((i, el) => $(el).text().startsWith('Référence CVE CVE-'))
            .each((i, el) => {
            const splittedCve = $(el).text().replace('Référence CVE ', '').split(/\s+/);
            current.cve.push({
                id: splittedCve[0].trim(),
                href: splittedCve[1].trim()
            });
        });
    }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZpcy1kZWZhdWx0LXBhcnNlcnMuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL0FuYXMvV29ya3NwYWNlL2NlcnRmci9jZXJ0ZnItbG9hZGVyL2xpYi8iLCJzb3VyY2VzIjpbImF2aXMtZGVmYXVsdC1wYXJzZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQ0Esc0RBQThCO0FBRzlCLE1BQU0sTUFBTSxHQUFHLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNO0lBQ2hFLFNBQVMsRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsVUFBVSxDQUFDLENBQUM7QUFHMUQsUUFBQSxjQUFjLEdBQWtCO0lBQ3pDLFlBQVk7SUFDWixDQUFDLE9BQWUsRUFBRSxPQUFhLEVBQVEsRUFBRTtRQUNyQyxPQUFPLENBQUMsU0FBUyxHQUFHLGlCQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLDhCQUE4QixDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdHLENBQUM7SUFFRCxRQUFRO0lBQ1IsQ0FBQyxPQUFlLEVBQUUsT0FBYSxFQUFRLEVBQUU7UUFDckMsT0FBTyxDQUFDLEtBQUssR0FBRyxpQkFBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUN6RyxDQUFDO0lBRUQsU0FBUztJQUNULENBQUMsT0FBZSxFQUFFLE9BQWEsRUFBUSxFQUFFO1FBQ3JDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUM7UUFFNUIsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxr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